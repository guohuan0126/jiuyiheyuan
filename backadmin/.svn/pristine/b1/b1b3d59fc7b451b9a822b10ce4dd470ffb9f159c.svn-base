package com.duanrong.business.withdraw.service.impl;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import util.Log;
import util.MyCollectionUtils;
import util.MyStringUtils;
import base.exception.InsufficientBalance;

import com.duanrong.business.bankcard.dao.BankCardDao;
import com.duanrong.business.bankcard.model.BankCard;
import com.duanrong.business.risk.service.SystemBillService;
import com.duanrong.business.sms.SmsConstants;
import com.duanrong.business.sms.service.SmsService;
import com.duanrong.business.user.UserConstants;
import com.duanrong.business.user.service.UserMoneyService;
import com.duanrong.business.withdraw.dao.WithdrawCashDao;
import com.duanrong.business.withdraw.model.WithdrawCash;
import com.duanrong.util.DateUtil;
import com.duanrong.util.IdUtil;
import com.duanrong.util.ToType;

/**
 * @Description: 提现（易宝）
 * @Author: 林志明
 * @CreateDate: Oct 9, 2014
 */
@Service
public class WithdrawCashBO {

	@Resource
	WithdrawCashDao withdrawCashDao;

	@Resource
	UserMoneyService userMoneyService;

	@Resource
	BankCardDao bankCardDao;
	
	@Resource
	SmsService smsService;

	@Resource
	Log log;

	@Resource
	SystemBillService systemBillService;

	/**
	 * 申请提现
	 * 
	 * @param withdrawCash
	 * @throws InsufficientBalance
	 */
	public void applyWithdrawCash(WithdrawCash withdraw)
			throws InsufficientBalance {

		String userId = withdraw.getUserId();
		Double balance = userMoneyService.readBalance(userId);
		/*
		 * if (balance < 100) { // FIXME：需要抛异常或其他处理 // 不能提现 }
		 */

		if (balance < withdraw.getActualMoney()) {
			log.errLog(this.getClass().getName() + ".applyWithdrawCash",
					"提现金额大于账户余额，用户ID：" + userId);
			throw new InsufficientBalance();
		}

		BankCard bankCard = null;

		// 查询银行卡有问题，应该是状态是认证成功
		List<BankCard> bankcards = bankCardDao.getValidBankCardByUserId(userId,
				false);

		if (MyCollectionUtils.isNotBlank(bankcards)) {
			bankCard = bankcards.get(0);
		} else {
			// 没有找到有效的银行卡，需要抛异常，由于定义新异常会造成开发难度并且没有银行卡的机率很低，所以使用
			// 1 / 0的方式结束提现的操作，不使用return是因为不让其他代码继续执行
			log.errLog("提现", "没有找到有效的银行卡，withdraw：" + withdraw);
			@SuppressWarnings("unused")
			int i = 1 / 0;
		}

		withdraw.setFee(0D);
		withdraw.setCashFine(0D);
		withdraw.setAccount("借款账户");
		withdraw.setBankCard(bankCard);

		withdraw.setId(IdUtil.generateId(ToType.WICA));
		withdraw.setTime(new Date());
		// 等待审核
		withdraw.setStatus(UserConstants.WithdrawStatus.WAIT_VERIFY);
	}

	public void passWithdrawCashApply(WithdrawCash withdrawCash) {
		// 从余额中取，系统账户也要记录
		withdrawCash.setStatus(UserConstants.WithdrawStatus.SUCCESS);
		withdrawCashDao.update(withdrawCash);
		try {
			String userId = withdrawCash.getUserId();
			String withdrawCashId = withdrawCash.getId();
			Double actualMoney = withdrawCash.getActualMoney();
			userMoneyService.transferOutFromBalance(userId, actualMoney,
					"提现成功", "提现ID:" + withdrawCashId);

			// 系统账户
			// 系统账户金额操作不能影响用户的账户
			try {
				// 往system_bill表中插入值
				double systemMoney = 2;
				String detail = MyStringUtils.append("用户ID：", userId, "，提现ID：",
						withdrawCashId, "，提现金额：", actualMoney);
				systemBillService.transferOut(systemMoney, "提现手续费", detail);
			} catch (Exception ex) {
				log.errLog("提现，系统账户操作", ex);
			}
		} catch (InsufficientBalance e) {
			throw new RuntimeException(e);
		}
	}

	@Transactional(rollbackFor = Exception.class)
	public void passWithdrawCashApply(String withdrawCashId) throws Exception {
		synchronized (WithdrawCashBO.class) {
			try {
				WithdrawCash withdrawCash = withdrawCashDao.get(withdrawCashId);
				if (StringUtils.equals(withdrawCash.getStatus(),
						UserConstants.WithdrawStatus.WAIT_VERIFY)) {
					// 从余额中取，系统账户也要记录
					withdrawCash.setStatus(UserConstants.WithdrawStatus.SUCCESS);
					// 更新withdraw_cash表，放在user_bill插入操作之后，以免出现事物不同步的问题
					withdrawCashDao.update(withdrawCash);

					String userId = withdrawCash.getUserId();
					Double actualMoney = withdrawCash.getActualMoney();
					userMoneyService.transferOutFromBalance(withdrawCashId,
							userId, actualMoney, "提现成功", "提现ID:"
									+ withdrawCashId);
					if("URGENT".equals(withdrawCash.getWithdrawType())){
						userMoneyService.transferOutFromBalance(withdrawCashId+"fee",
								userId, withdrawCash.getFee(), "加急提现手续费", "提现ID:"
										+ withdrawCashId);
					}
					// 系统账户
					// 系统账户金额操作不能影响用户的账户
					try {
						if(!"URGENT".equals(withdrawCash.getWithdrawType())){
							double systemMoney = 2;
							String detail = MyStringUtils
									.append("用户ID：", userId, "，提现ID：",
											withdrawCashId, "，提现金额：", actualMoney);
							systemBillService.transferOut(systemMoney, "提现手续费",
									detail);
						}
					} catch (Exception ex) {
						log.errLog("提现，系统账户操作", ex);
					}
				}
			} catch (Exception ex) {
				log.errLog("处理提现失败", ex);
				throw ex;
			}
		}
	}
}
