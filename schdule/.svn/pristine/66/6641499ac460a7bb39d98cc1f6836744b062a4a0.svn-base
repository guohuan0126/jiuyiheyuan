<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duanrong.business.lostcustomer.mapper.LostCustomerMapper">
	<resultMap type="user" id="userRM">
		<result property="userId" column="user_id" />
	</resultMap>
	
	<!-- 获取最晚的一个项目结束时间至今已超过15天的所有用户 -->
	<select id="getAllUser" parameterType="string" resultMap="userRM">
		select i.user_id,MAX(l.finish_time)  
		from loan l  
		left join invest i  
		on l.id=i.loan_id  
		where l.status='完成'   
		group by i.user_id 
		having MAX(l.finish_time) &lt; #{finishTime}
	</select>
	<select id="getAllUser1" parameterType="string" resultMap="userRM">
		select i.user_id,l.finish_time  ,l.status
		from invest i  
		left join loan l  
		on l.id=i.loan_id  
		where l.status='完成' AND l.finish_time=#{finishTime}
	</select>

	<!-- 根据userId和类型获取天天赚资产 -->
	<select id="getDemandMoney" parameterType="string" resultType="double">
		SELECT ROUND((
			(SELECT IFNULL(SUM(money),0) 
				FROM  demand_treasure_bill
				WHERE user_id=#{userId}
				AND type='in')+
			(SELECT IFNULL(SUM(money),0) 
				FROM demand_treasure_bill 
				WHERE user_id=#{userId}
				AND type='interest')-
			(SELECT IFNULL(SUM(money),0) 
				FROM demand_treasure_bill 
				WHERE user_id=#{userId}
				AND type='out')-
			(SELECT IFNULL(SUM(money),0) 
				FROM demand_treasure_bill 
				WHERE user_id=#{userId}
				AND type='outinterest')
			),2) AS money
		FROM DUAL
	</select>

	<!-- 根据user_id查询账户总资产 -->
	<select id="gettotalMoneyByUserId" parameterType="string" resultType="double">
		SELECT ROUND(((
			SELECT IFNULL(SUM(money),0) 
			FROM user_bill 
			WHERE user_id=#{userId}
				AND type='ti_balance')+
			(SELECT IFNULL(SUM(money),0) 
				FROM user_bill 
				WHERE user_id=#{userId}
				AND type='pt_balance')-
			(SELECT IFNULL(SUM(money),0) 
				FROM user_bill 
				WHERE user_id=#{userId}
				AND type='to_balance')-
			(SELECT IFNULL(SUM(money),0) 
				FROM user_bill 
				WHERE user_id=#{userId}
				AND type='freeze')+
			(SELECT IFNULL(SUM(money),0) 
				FROM user_bill 
				WHERE user_id=#{userId}
				AND type='unfreeze')
			),2) AS money
		FROM DUAL
	</select>

	<!-- 根据userId查询投资在投定期次数 -->
	<select id="getInvestStatusCount" parameterType="string" resultType="int">
		SELECT COUNT(*) 
		FROM invest i 
		WHERE i.user_id=#{userId} 
		AND i.status IN ('还款中','投标成功') 
	</select>

	<!-- 根据userId查询用户定期投资次数 -->
	<select id="getInvestNumByUserId" parameterType="string" resultType="int">
		SELECT COUNT(*) FROM invest WHERE user_id=#{userId} AND status!='流标'
	</select>
	<!-- 根据userId查询用户活期投资次数 -->
	<select id="getDemandNumByUserId" parameterType="string" resultType="int">
		SELECT COUNT(*) FROM demand_treasure_bill WHERE user_id=#{userId} AND type='in'
	</select>
	<insert id="insertAllLostCustomer" parameterType="list">
		INSERT INTO lost_customer (user_id,create_time,oreferrer_status)
		VALUES
		<foreach collection="list" item="item" index="index" separator="," >  
        (#{item.userId},#{item.createTime},#{item.oreferrerStatus})  
    	</foreach> 
	</insert>
	<select id="getLostCustomerByUserId" parameterType="string" resultType="com.duanrong.business.lostcustomer.model.LostCustomer">
		SELECT * FROM lost_customer WHERE user_id = #{userId}
	</select>
	
	<insert id="insertLostCustomerToHistory">
		INSERT INTO lost_customer_history (id,user_id,status,customer_service,activation_time,return_invest_time,return_total_invest,return_total_demand,evaluation,create_time,lost_day,oreferrer_status) 
		VALUES (#{id},#{userId},#{status},#{customer_service},#{activationTime},#{returnInvestTime},#{returnTotalInvest},#{returnTotalDemand},#{evaluation},#{createTime},#{lostDays},#{oreferrerStatus})
	</insert>
	<select id="getOreferrerByUserId" parameterType="string" resultType="string">
		SELECT  offline_referrer  FROM user WHERE id= #{userId} 
	</select>
	
	<delete id="delete">
		DELETE FROM lost_customer 
		WHERE user_id=#{userId}
	</delete>
</mapper>