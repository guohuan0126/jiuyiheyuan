package com.duanrong.schedule;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.springframework.util.CollectionUtils;

import util.HttpUtil;
import util.Log;

import com.alibaba.fastjson.JSONObject;
import com.duanrong.business.recharge.service.RechargeService;
import com.duanrong.business.trusteeship.model.TrusteeshipOperation;
import com.duanrong.business.trusteeship.service.TrusteeshipOperationService;

@Component
public class TrusteeshipSchdule {

	@Resource
	TrusteeshipOperationService trusteeshipOperationService;

	@Resource
	RechargeService rechargeService;

	@Resource
	Log log;


	@Scheduled(cron="0 0/30 * * * ?")
	public void handleSendedOperations() {
		// 查找请求表里面，等待返回的数据，且请求时间在十分钟以外。
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		log.infoLog("Trusteeship-轮询开始", sdf.format(new Date()));
		List<TrusteeshipOperation> tos = trusteeshipOperationService
				.getUnCallbackOperations(10);
		if (CollectionUtils.isEmpty(tos)) {
			log.infoLog("Trusteeship-轮询结束", "没有可以轮询的数据");
			return;
		}
		for (TrusteeshipOperation to : tos) {
			try {
				if ("create_account".equals(to.getType())) {
					String url = "/account/query.do";
					JSONObject param = new JSONObject();
					param.put("userId",to.getUserId());
					param.put("type",to.getType());
					param.put("handle",1);
					JSONObject result = HttpUtil.sendDRPayPost(param, url);
					if(result != null && result.getInteger("code") == 1){
						JSONObject data = result.getJSONObject("data");
						JSONObject respData = data.getJSONObject("respData");
						if(respData != null && respData.getInteger("code") == 0){
							to.setStatus("PASSED");
						}else{
							to.setStatus("REFUSED");
						}
						to.setResponseTime(new Date());
						to.setResponseData(respData.toJSONString());
						trusteeshipOperationService.update(to);
					}else{
						log.errLog("Trusteeship-轮询异常", "调用drpay服务异常"+result.getString("msg"));
					}
				} else {
					String url = "/trade/query.do";
					JSONObject param = new JSONObject();
					param.put("requestNo",to.getMarkId());
					param.put("type",to.getType());
					param.put("handle",1);
					JSONObject result = HttpUtil.sendDRPayPost(param, url);
					if(result != null && result.getInteger("code") == 1){
						JSONObject data = result.getJSONObject("data");
						JSONObject respData = data.getJSONObject("respData");
						if(respData != null && respData.getInteger("code") == 0){
							to.setStatus("PASSED");
						}else{
							to.setStatus("REFUSED");
						}
						to.setResponseTime(new Date());
						to.setResponseData(respData.toJSONString());
						trusteeshipOperationService.update(to);
					}else{
						log.errLog("Trusteeship-轮询异常", "调用drpay服务异常"+result.getString("msg"));
					}
				}
			} catch (Exception e) {
				log.errLog("Trusteeship-轮询异常", e);
			}
		}
		log.infoLog("Trusteeship-轮询结束", sdf.format(new Date()));
	}
	
}
