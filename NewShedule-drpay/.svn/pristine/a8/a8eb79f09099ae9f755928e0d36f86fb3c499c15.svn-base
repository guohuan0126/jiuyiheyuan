<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.duanrong.business.demand.mapper.DemandtreasureTransferOutMapper">
	<resultMap type="DemandtreasureTransferOut" id="DemandtreasureTransferOutRM">
		<id property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="money" column="money" />
		<result property="sendedTime" column="sended_time" />
		<result property="successTime" column="success_time" />
		<result property="transferWay" column="trnsfer_way" />
		<result property="status" column="status" />
		<result property="detail" column="detail" />
		<result property="principal" column="principal" />
		<result property="interest" column="interest" />
		<association property="user" column="user_id"
			resultMap="com.duanrong.business.user.mapper.UserMapper.userRM" />
	</resultMap>
	<resultMap type="DemandtreasureTransferOut" id="DemandtreasureTransferOutRM1">
		<id property="id" column="id" />
		<result property="total" column="total" />
		<result property="summoney" column="summoney" />
	</resultMap>
	<resultMap type="DemandtreasureTransferOut" id="DemandtreasureTransferOutRM2">
		<id property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="summoney" column="summoney" />
	</resultMap>

	<insert id="insert" parameterType="DemandtreasureTransferOut">
		INSERT INTO
		demand_treasure_transferout
		(id, user_id, money,principal,
		interest,sended_time, trnsfer_way,status,detail, fork)
		VALUES
		(#{id}, #{userId}, #{money},#{principal},#{interest}, #{sendedTime},
		#{transferWay}, #{status}, #{detail}, #{fork})
	</insert>


	<select id="gettotal" resultMap="DemandtreasureTransferOutRM1">
		select count(*) as
		total,ROUND(SUM(money),2) as summoney from demand_treasure_transferout
		where status='sended'
	</select>
	<select id="gettotalUser" resultMap="DemandtreasureTransferOutRM2">
		select user_id
		,ROUND(SUM(money),2) as summoney from demand_treasure_transferout
		where status='sended' GROUP BY user_id
	</select>

	<select id="pageInfo" parameterType="map"
		resultMap="DemandtreasureTransferOutRM">
		select r.*,u.realname,u.mobile_number from demand_treasure_transferout
		r left join user u on r.user_id=u.id
		where r.status='sended'
		<if test="userId != null">
			AND u.id = #{userId}
		</if>
		<if test="realname != null">
			AND u.realname = #{realname}
		</if>
		<if test="mobileNumber != null">
			AND u.mobile_number = #{mobileNumber}
		</if>
		ORDER BY r.sended_time
	</select>
	<select id="findAll" resultMap="DemandtreasureTransferOutRM">
		select * from
		demand_treasure_transferout where status='sended' ORDER BY sended_time
	</select>
	<select id="get" parameterType="string" resultMap="DemandtreasureTransferOutRM">
		SELECT *
		FROM
		demand_treasure_transferout
		WHERE id = #{id}
	</select>
	<update id="update" parameterType="DemandtreasureTransferOut">
		UPDATE demand_treasure_transferout
		<set>
			<if test="status != null">
				status=#{status},
			</if>
			<if test="successTime != null">
				success_time=#{successTime},
			</if>
			<if test="fork != null and fork != 0 ">
				fork=#{fork},
			</if>
		</set>
		WHERE id=#{id}
	</update>

	<select id="getMoneySendedByDay" parameterType="map" resultType="double">
		SELECT SUM(money)
		FROM demand_treasure_transferout where status =
		'sended' and
		date_format(create_time, '%Y-%m-%d') &lt;=
		date_format(#{date},
		'%Y-%m-%d')-interval 1 day
	</select>
	<select id="getOutSumMoney" parameterType="map"
		resultMap="DemandtreasureTransferOutRM">
		SELECT IFNULL(SUM(money), 0) as money, IFNULL(SUM(interest),
		0) as interest, IFNULL(SUM(principal), 0) AS principal FROM
		demand_treasure_transferout
		WHERE status = #{status} AND user_id = #{userId}
	</select>
	<!-- 获取用户转出总额 -->
	<select id="getOutSumMoney2" parameterType="map" resultType="double">
		SELECT SUM(money) from demand_treasure_transferout where
		`status`=#{status} and user_id=#{userId}

	</select>

	<select id="findAllSuccess" resultMap="DemandtreasureTransferOutRM">
		select * from
		demand_treasure_transferout where status='success' and fork = 0 ORDER
		BY success_time
	</select>
</mapper>